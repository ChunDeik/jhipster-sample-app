name: Application CI
on: [push, pull_request]
jobs:
  pipeline:
    name: jhipsterSampleApplication pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 20.15.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v4

      # Setup environment
      - uses: actions/setup-node@v4
        with:
          node-version: 20.15.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      # Install dependencies
      - name: Install node.js packages
        run: npm install

      # Build steps
      - name: Run backend test
        run: |
          chmod +x mvnw
          ./mvnw test
      - name: Run frontend test
        run: npm test

      # Package and build Docker image
      - name: Build with JIB
        run: ./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild

      # Deployment steps
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/jhipster-sample-app:latest

      - name: Deploy to staging
        if: github.ref == 'refs/heads/main'
        run: |
          docker-compose -f src/main/docker/app.yml up -d
